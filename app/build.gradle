apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'com.google.protobuf'


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "io.github.hunachi.tsugidoko"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        def properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        resValue "string", "map_key", "${properties.getProperty("MAP_KEY")}"
        buildConfigField "String", "SERVER_URL", "\"${properties.getProperty("SERVER_URL")}\""
        buildConfigField "String", "PORT", "\"${properties.getProperty("PORT")}\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

def grpcVersion = "1.17.1"

dependencies {
    def lifecycle_version = "2.1.0-alpha01"
    def koin_version = "1.0.2"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    testImplementation "androidx.arch.core:core-testing:2.0.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'

    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-core-ext:$koin_version"

    // ktx
    implementation 'androidx.core:core-ktx:1.0.1'

    // maps
    implementation 'com.google.android.gms:play-services-maps:16.0.0'

    // coroutine
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.0"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    // smart tab layout
    implementation 'com.ogaclejapan.smarttablayout:library:1.6.1@aar'

    // grpc
    implementation "io.grpc:grpc-okhttp:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf-lite:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "javax.annotation:javax.annotation-api:1.2"

    // picasso
    implementation 'com.squareup.picasso:picasso:2.71828'
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.1.0' }
    plugins {
        javalite { artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0" }
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc {
                    option 'lite'
                }
            }
        }
    }
}
